# Automatically build, run unit and integration tests to detect errors early (CI provided by GitHub)
# including making pull requests review easier

# Human-readable name in the actions tab
name: Maven Build

# Build on every pull request regardless of the branch
# Wiki: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on: 
   workflow_dispatch: 
     inputs: 
       logLevel: 
         description: 'Log level' 
         required: true 
         default: 'warning' 
   push: 
     branches: [ "*" ] 
   pull_request: 
     branches: [ "*" ] 

jobs:
  # job id
  build_and_test:

    # Environment image - always use the newest OS
    runs-on: ubuntu-latest
    permissions:
      # With at least one permission given, all default to read
      contents: read

    # Run steps
    steps:
      # Pull changes
      - uses: actions/checkout@v4

      # Setup Java
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version-file: '.java-version'
          cache: 'maven'

      # Build and test (included in package)
      - name: Build with Maven and test
        # Run non-interactive, package (with compile+test),
        # ignore snapshot updates, because they are likely to have breaking changes, enforce checksums
        run: mvn test --batch-mode --threads 2.0C --no-snapshot-updates --strict-checksums --file pom.xml
      - run: mkdir staging && cp FastLogin/target/*.jar staging 
      - name: Set Release version env variable 
        run: | 
         echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV 
      - name: "Build & test" 
        run: | 
         echo "done!" 
      - uses: "marvinpinto/action-automatic-releases@latest" 
        with: 
         repo_token: "${{ secrets.GITHUB_TOKEN }}" 
         automatic_release_tag: "${{ env.RELEASE_VERSION }}" 
         prerelease: false 
         title: "Release ${{ env.RELEASE_VERSION }}" 
         files: | 
           staging/*.jar
  dependency:
    runs-on: ubuntu-latest

    # Run steps
    steps:
      # Pull changes
      - uses: actions/checkout@v4

      # Setup Java
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version-file: '.java-version'
          cache: 'maven'

      - name: Submit Dependency Snapshot
        if: ${{ github.event_name == 'push' }}
        uses: advanced-security/maven-dependency-submission-action@v4.1.2
